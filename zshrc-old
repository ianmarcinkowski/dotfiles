# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh
ZDOTDIR="${HOME}/.zsh"

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="ianmarcinkowski"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(ssh-agent git wd vi-mode nulogy)

source $ZSH/oh-my-zsh.sh

# CUSTOM turn autocorrect off
unsetopt correct_all

# from bash_profile
export LSCOLORS='cxfxcxdxbxegedabagacad'
export CLICOLOR_FORCE=1
export WORKON_HOME=$HOME/.virtualenvs
export GREP_COLOR=1
export VIMDIR=$HOME/.vim
export SERVER_APPS=~/projects/server_apps

# Fuzzy search
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -l -g ""'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# aliases
alias mkdir='mkdir -p'
alias ls='ls -G --color'
alias la='ls -al'
alias ..="cd .."
alias ..2="cd ../.."
alias ..3="cd ../../.."
alias ..4="cd ../../../.."
alias ..5="cd ../../../../.."
alias back="cd -"
alias blog="bzr log | less"
alias startnginx='sudo /usr/local/nginx/sbin/nginx'
alias stopnginx='sudo kill `cat /usr/local/nginx/logs/nginx.pid `'
alias restartnginx='stopnginx; startnginx'
alias clone='virtualenv-clone'
alias pydevelop='python setup.py develop'
alias pyinstall='python setup.py install'
alias grep='grep --color'
alias migrate='migrate.py'
alias tlist='tmux list-sessions'
alias tsession='tmux attach-session -t $1 || tmux new-session -t $2'
alias vimrc='vim $VIMDIR/vimrc'
alias ra='ranger'
alias docker-stop-all='docker stop $(docker ps -a -q)'
alias docker-rm-all='docker rm $(docker ps -a -q)'
alias docker-rmi-all='docker rmi $(docker images -q)'
alias docker-cleanup='docker rm $(docker ps -a -f "name=_run_" -q) && docker rmi $(docker images -q)'
alias dc='docker-compose'
alias ember='./node_modules/ember-cli/bin/ember'
alias pmcreateuser='rake "nulogy:user_management:create_admin[ianm+dev@nulogy.com,Password1]"'
alias pmdbfiiiiiiiix='rake db:drop:all && rake db:create:all && rake db:schema:load && rake db:seed'

alias diffsf='diff-so-fancy'
alias fr='kill_processes_listening_on 3000; kill_processes_listening_on 5555; pkill nginx; pkill unicorn; foreman start'
alias frkill='kill_processes_listening_on 3000; kill_processes_listening_on 5555; pkill nginx; pkill unicorn;'
function kill_processes_listening_on() { lsof -i:$1 -t | xargs kill; }

# python stuff
alias pip=pip3

# Docker commands
function dockerservice() {
    cd ~/server_apps
    docker-compose -f docker-compose.yml -f "$1".yml run -e PURPOSE=srv --rm --name "$1" "$1" bash
}

# Gunicorn commands
alias cardicorn='gunicorn -c gunicorn.conf.py -t 9999 --debug cardapp.wsgi:app --reload'

# Docker aliases
dockip() {
    docker inspect --format '{{ .NetworkSettings.IPAddress }}' "$@"
}

function up() { local p= i=${1:-1}; while (( i-- )); do p+=../; done; cd "$p$2" && pwd; }
function mdk() { docker kill $1; docker rm $1; }

# auto-completion:
autoload -U compinit
compinit
_force_rehash() { (( CURRENT == 1 )) && rehash ; return 1 }
zstyle ':completion:::::' completer _force_rehash _expand _complete _approximate
zstyle ':completion:*:descriptions' format "- %d -"
zstyle ':completion:*:default' list-prompt '%S%M matches%s'
zstyle ':completion:*:manuals' separate-sections true
zstyle ':completion:*:manuals.(^1*)' insert-sections true
zstyle ':completion:*' verbose true
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ${XDG_CACHE_HOME:-${HOME}/cache}
zstyle ':completion:*' squeeze-slashes true
zstyle ':completion:*:functions' ignored-patterns '_*'
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:*:kill:*:processes' command 'ps haxopid:5,user:4,%cpu:4,ni:2,stat:3,etime:8,args'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' force-list always
[[ -a $(whence -p pacman-color) ]] && compdef _pacman pacman-color=pacman

# framebuffer colors:
if [[ ${TERM} == linux ]] || [[ ${TERM} =~ screen && ${+DISPLAY} == 0 ]]; then
    echo -en "\e]P0000000" ; echo -en "\e]P83d3a3a"
    echo -en "\e]P1d74b73" ; echo -en "\e]P9e07895"
    echo -en "\e]P2799c99" ; echo -en "\e]PA85afa9"
    echo -en "\e]P3c8bc45" ; echo -en "\e]PBbaa02c"
    echo -en "\e]P476ace2" ; echo -en "\e]PC98a7b6"
    echo -en "\e]P5a488d9" ; echo -en "\e]PD9f8bab"
    echo -en "\e]P6508686" ; echo -en "\e]PE569e9a"
    echo -en "\e]P78d8d8d" ; echo -en "\e]PFdad3d3"
fi

# Fish-like syntax highlighting for ZSH:
if [[ -f $HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
  . $HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

  ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

  ZSH_HIGHLIGHT_STYLES[default]=none
  ZSH_HIGHLIGHT_STYLES[unknown-token]=fg=red,bold
  ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=green
  ZSH_HIGHLIGHT_STYLES[alias]=none
  ZSH_HIGHLIGHT_STYLES[builtin]=none
  ZSH_HIGHLIGHT_STYLES[function]=none
  ZSH_HIGHLIGHT_STYLES[command]=none
  ZSH_HIGHLIGHT_STYLES[precommand]=none
  ZSH_HIGHLIGHT_STYLES[commandseparator]=none
  ZSH_HIGHLIGHT_STYLES[hashed-command]=none
  ZSH_HIGHLIGHT_STYLES[path]=none
  ZSH_HIGHLIGHT_STYLES[globbing]=none
  ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=blue
  ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=none
  ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=none
  ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
  ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=yellow
  ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=yellow
  ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=cyan
  ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=cyan
  ZSH_HIGHLIGHT_STYLES[assign]=none

  # override colors for matching brackets:
  ZSH_HIGHLIGHT_MATCHING_BRACKETS_STYLES=(
    'fg=blue,bold'    # Style for first level of imbrication
    'fg=green,bold'   # Style for second level of imbrication
    'fg=magenta,bold' # etc... Put as many styles as you wish, or leave
    'fg=cyan,bold'    # empty to disable brackets matching.
    'fg=white,bold'
    'fg=blue'
    'fg=green'
    'fg=magenta'
    'fg=cyan'
    'fg=white'
  )
fi

# keybindings (defined AFTER scripts):
bindkey "^[[2~" overwrite-mode
bindkey "^[[3~" delete-char
bindkey "^[[5~" up-line-or-search
bindkey "^[[6~" down-line-or-search
bindkey "^[[1~" beginning-of-line
bindkey "^[[7~" beginning-of-line
bindkey "^[[4~" end-of-line
bindkey "^[[8~" end-of-line

HISTSIZE=10000
SAVEHIST=10000

# gettext
export PATH="/usr/local/opt/gettext/bin:$PATH"

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# RBenv
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

# wd plugin
wd() {
  source ~/.local/bin/wd/wd.sh
}

# Rails editor
export RAILS_FOOTNOTES_EDITOR=vim
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES # OSX fork thing
